AWSTemplateFormatVersion: "2010-09-09"
Description: "Sample Service"

Parameters:

  Stage:
    Type: String
    Description: "Deployment stage name."

  ArtifactS3Bucket:
    Type: String
    Description: "Artifact S3 bucket"
  LambdaS3Key:
    Type: String
    Description: "Artifact object key"

Resources:

  Lambda:
    Type: AWS::Lambda::Function
    DependsOn: [LambdaRole]
    Properties:
      FunctionName: !Sub "${AWS::StackName}-lambda-${AWS::Region}-${Stage}"
      Runtime: nodejs8.10
      Handler: handler.handle
      Environment:
        Variables:
          SERVICE_NAME: !Ref AWS::StackName
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Ref ArtifactS3Bucket
        S3Key: !Ref LambdaS3Key

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-lambda-role-${AWS::Region}-${Stage}"
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: ["logs:*"]
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-lambda-${AWS::Region}-${Stage}"
                Effect: Allow

Outputs:

  Lambda:
    Value: !Ref Lambda